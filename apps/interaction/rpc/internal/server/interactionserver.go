// Code generated by goctl. DO NOT EDIT.
// Source: interaction.proto

package server

import (
	"context"

	"rpc/apps/interaction/rpc/interaction"
	"rpc/apps/interaction/rpc/internal/logic"
	"rpc/apps/interaction/rpc/internal/svc"
)

type InteractionServer struct {
	svcCtx *svc.ServiceContext
	interaction.UnimplementedInteractionServer
}

func NewInteractionServer(svcCtx *svc.ServiceContext) *InteractionServer {
	return &InteractionServer{
		svcCtx: svcCtx,
	}
}

func (s *InteractionServer) IsFavorite(ctx context.Context, in *interaction.IsFavoriteReq) (*interaction.IsFavoriteResp, error) {
	l := logic.NewIsFavoriteLogic(ctx, s.svcCtx)
	return l.IsFavorite(in)
}

func (s *InteractionServer) GetFavoriteCountByUserId(ctx context.Context, in *interaction.FavoriteCountByUserIdReq) (*interaction.FavoriteCountByUserIdResp, error) {
	l := logic.NewGetFavoriteCountByUserIdLogic(ctx, s.svcCtx)
	return l.GetFavoriteCountByUserId(in)
}

func (s *InteractionServer) GetFavoriteCountByVideoId(ctx context.Context, in *interaction.FavoriteCountByVideoIdReq) (*interaction.FavoriteCountByVideoIdResp, error) {
	l := logic.NewGetFavoriteCountByVideoIdLogic(ctx, s.svcCtx)
	return l.GetFavoriteCountByVideoId(in)
}

func (s *InteractionServer) GetCommentCountByVideoId(ctx context.Context, in *interaction.CommentCountByVideoIdReq) (*interaction.CommentCountByVideoIdResp, error) {
	l := logic.NewGetCommentCountByVideoIdLogic(ctx, s.svcCtx)
	return l.GetCommentCountByVideoId(in)
}

func (s *InteractionServer) SendFavoriteAction(ctx context.Context, in *interaction.FavoriteActionReq) (*interaction.FavoriteActionResp, error) {
	l := logic.NewSendFavoriteActionLogic(ctx, s.svcCtx)
	return l.SendFavoriteAction(in)
}

func (s *InteractionServer) GetFavoriteList(ctx context.Context, in *interaction.FavoriteListReq) (*interaction.FavoriteListResp, error) {
	l := logic.NewGetFavoriteListLogic(ctx, s.svcCtx)
	return l.GetFavoriteList(in)
}

func (s *InteractionServer) SendCommentAction(ctx context.Context, in *interaction.CommentActionReq) (*interaction.CommentActionResp, error) {
	l := logic.NewSendCommentActionLogic(ctx, s.svcCtx)
	return l.SendCommentAction(in)
}

func (s *InteractionServer) GetCommentList(ctx context.Context, in *interaction.CommentListReq) (*interaction.CommentListResp, error) {
	l := logic.NewGetCommentListLogic(ctx, s.svcCtx)
	return l.GetCommentList(in)
}
